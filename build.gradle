apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'

configurations {
    deployerJars
}

repositories {
    mavenCentral()
}

task run(dependsOn: 'build') << {
    ant.java(
            classname: '',
            fork: true,
            classpath: "${sourceSets.main.runtimeClasspath.asPath}"
    )
}

task deploy {
    dependsOn 'clean', 'uploadArchives'
}

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        pom.groupId = 'noam'
        pom.version = '0.1'
        pom.artifactId = 'noam-ioc'
        repository(url: "file://$buildDir/../../mvn-repo")
    }
}

sourceSets {
    functional {
        compileClasspath = sourceSets.main.output + configurations.testRuntime
        runtimeClasspath = output + sourceSets.main.output + configurations.testRuntime
    }
}

sourceSets.test.resources.srcDir 'src/test/java'

dependencies {
    compile 'log4j:log4j:1.2.16',
            'org.eclipse.jetty:jetty-server:8.1.9.v20130131',
            'org.eclipse.jetty:jetty-servlet:8.1.9.v20130131',
            'org.eclipse.jetty:jetty-webapp:8.1.9.v20130131',
            'org.eclipse.jetty:jetty-client:8.1.9.v20130131',
            'org.eclipse.jetty:jetty-util:8.1.9.v20130131',
            'com.google.guava:guava:14.0',
            'org.antlr:stringtemplate:4.0'
    testCompile 'junit:junit:4.8.1',
            'org.mockito:mockito-all:1.9.0'
    deployerJars "org.apache.maven.wagon:wagon-ssh:2.2"
}
